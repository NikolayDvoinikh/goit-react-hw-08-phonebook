{"version":3,"file":"static/js/611.c6996140.chunk.js","mappings":"qNAKA,EALqB,CACnBA,MAAO,GACPC,SAAU,ICeZ,EAjBe,CACbD,MAAO,CACLE,KAAM,QACNC,KAAM,QACNC,UAAU,EACVC,MAAO,aACPC,YAAa,cAEfL,SAAU,CACRC,KAAM,WACNC,KAAM,WACNC,UAAU,EACVC,MAAO,gBACPC,YAAa,kB,2DCiCjB,EAnCkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDC,aAAAA,EACAF,SAAAA,IAFMG,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,aAIrBZ,EAAoBW,EAApBX,MAAOC,EAAaU,EAAbV,SACTY,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAE5B,OACE,UAACC,EAAA,EAAD,CACEC,UAAU,OACVC,SAAS,QACTC,OAAO,SACPZ,SAAUK,EAJZ,WAME,SAACQ,EAAA,GAAD,gBAAYC,SAAUX,GAAkBY,EAAAA,OAAxC,IAAsDC,MAAOvB,MAC7D,SAACoB,EAAA,GAAD,gBACEC,SAAUX,GACNY,EAAAA,UAFN,IAGEC,MAAOtB,MAET,SAACuB,EAAA,EAAD,CACEC,GAAI,CAAEN,OAAQ,cAAeO,QAAS,QACtCvB,KAAK,SACLwB,SAAS,SAACC,EAAA,EAAD,IACTf,QAASA,EACTgB,gBAAgB,MAChBC,QAAQ,YANV,UAQE,wCAIP,E,UC3BD,EAbkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,0BACE,SAAC,EAAD,CAAWzB,SANK,SAAA0B,GAClBF,GAASG,EAAAA,EAAAA,IAAMD,GAChB,KAOF,C,iHCOD,IAlBmB,SAAC,GAA4C,IAA1C5B,EAAyC,EAAzCA,MAAOK,EAAkC,EAAlCA,aAAiByB,GAAiB,YACvDC,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IACnC,OACE,+BACE,kBAAOC,QAASH,EAAhB,UACE,SAAC,KAAD,QACEX,GAAI,CAAEe,MAAO,OAAQC,QAAS,UAC9BpC,MAAOA,EACPyB,QAAQ,WACRM,GAAIA,EACJf,SAAUX,GACNyB,OAKb,C,kECGD,IAtBgB,SAAC,GAAgC,IAA9B5B,EAA6B,EAA7BA,SAAUE,EAAmB,EAAnBA,aAC3B,GAA0BiC,EAAAA,EAAAA,WAAS,UAAKjC,IAAxC,eAAOE,EAAP,KAAcgC,EAAd,KAEMjC,GAAekC,EAAAA,EAAAA,cACnB,YAAiB,IAAdC,EAAa,EAAbA,OACO3C,EAAgB2C,EAAhB3C,KAAMqB,EAAUsB,EAAVtB,MACdoB,GAAS,SAAAG,GACP,OAAO,kBAAKA,GAAZ,cAAwB5C,EAAOqB,GAChC,GACF,GACD,CAACoB,IASH,MAAO,CAAEhC,MAAAA,EAAOgC,SAAAA,EAAUjC,aAAAA,EAAcE,aANnB,SAAAmC,GACnBA,EAAEC,iBACFzC,GAAS,UAAKI,IACdgC,GAAS,UAAKlC,GACf,EAGF,C","sources":["modules/LoginForm/initialState.js","modules/LoginForm/fieldsType.js","modules/LoginForm/LoginForm.jsx","pages/loginPage/loginPage.jsx","shared/components/InputField/InputField.jsx","shared/hooks/useForm.js"],"sourcesContent":["const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  email: {\n    name: 'email',\n    type: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'User email',\n  },\n  password: {\n    name: 'password',\n    type: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","import useForm from 'shared/hooks/useForm';\nimport InputField from 'shared/components/InputField/InputField';\nimport initialState from './initialState';\nimport fields from './fieldsType';\n\nimport { Box } from '@mui/material';\nimport { isAuthLoading } from 'redux/auth/auth-selectors';\nimport { useSelector } from 'react-redux';\nimport SendIcon from '@mui/icons-material/Send';\nimport { LoadingButton } from '@mui/lab';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { handleChange, state, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { email, password } = state;\n  const loading = useSelector(isAuthLoading);\n\n  return (\n    <Box\n      component=\"form\"\n      maxWidth=\"300px\"\n      margin=\"0 auto\"\n      onSubmit={handleSubmit}\n    >\n      <InputField onChange={handleChange} {...fields.email} value={email} />\n      <InputField\n        onChange={handleChange}\n        {...fields.password}\n        value={password}\n      />\n      <LoadingButton\n        sx={{ margin: '30px auto 0', display: 'flex' }}\n        type=\"submit\"\n        endIcon={<SendIcon />}\n        loading={loading}\n        loadingPosition=\"end\"\n        variant=\"contained\"\n      >\n        <span>LogIn</span>\n      </LoadingButton>\n    </Box>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'modules/LoginForm/LoginForm';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/auth-operations';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  return (\n    <div>\n      <LoginForm onSubmit={handleLogin} />\n    </div>\n  );\n};\nexport default LoginPage;\n","import { nanoid } from 'nanoid';\nimport { useMemo } from 'react';\n\nimport { TextField } from '@mui/material';\n\nconst InputField = ({ label, handleChange, ...otherProps }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <>\n      <label htmlFor={id}>\n        <TextField\n          sx={{ width: '100%', padding: '10px 0' }}\n          label={label}\n          variant=\"standard\"\n          id={id}\n          onChange={handleChange}\n          {...otherProps}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default InputField;\n","import { useState, useCallback } from 'react';\n\nconst useForm = ({ onSubmit, initialState }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["email","password","name","type","required","label","placeholder","onSubmit","useForm","initialState","handleChange","state","handleSubmit","loading","useSelector","isAuthLoading","Box","component","maxWidth","margin","InputField","onChange","fields","value","LoadingButton","sx","display","endIcon","Send","loadingPosition","variant","dispatch","useDispatch","data","login","otherProps","id","useMemo","nanoid","htmlFor","width","padding","useState","setState","useCallback","target","prevState","e","preventDefault"],"sourceRoot":""}