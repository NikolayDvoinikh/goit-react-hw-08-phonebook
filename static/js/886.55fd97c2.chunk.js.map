{"version":3,"file":"static/js/886.55fd97c2.chunk.js","mappings":"qNACA,GAAiB,ECIjB,EALqB,CACnBA,MAAO,GACPC,SAAU,ICeZ,EAjBe,CACbD,MAAO,CACLE,KAAM,QACNC,KAAM,QACNC,UAAU,EACVC,MAAO,aACPC,YAAa,cAEfL,SAAU,CACRC,KAAM,WACNC,KAAM,WACNC,UAAU,EACVC,MAAO,gBACPC,YAAa,kB,UCcjB,EAnBkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDC,aAAAA,EACAF,SAAAA,IAFMG,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,aAIrBZ,EAAoBW,EAApBX,MAAOC,EAAaU,EAAbV,SACf,OACE,kBAAMM,SAAUK,EAAcC,UAAWC,EAAAA,WAAzC,WACE,SAACC,EAAA,GAAD,gBAAYC,SAAUN,GAAkBO,EAAAA,OAAxC,IAAsDC,MAAOlB,MAC7D,SAACe,EAAA,GAAD,gBACEC,SAAUN,GACNO,EAAAA,UAFN,IAGEC,MAAOjB,MAET,mBAAQE,KAAK,SAAb,sBAGL,E,oBCRD,EAbkB,WAChB,IAAMgB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,0BACE,SAAC,EAAD,CAAWb,SANK,SAAAc,GAClBF,GAASG,EAAAA,EAAAA,IAAMD,GAChB,KAOF,C,kHCOD,IAlBmB,SAAC,GAA4C,IAA1ChB,EAAyC,EAAzCA,MAAOK,EAAkC,EAAlCA,aAAiBa,GAAiB,YACvDC,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IACnC,OACE,+BACE,kBAAOC,QAASH,EAAhB,UACE,SAAC,KAAD,QACEI,GAAI,CAAEC,MAAO,OAAQC,QAAS,UAC9BzB,MAAOA,EACP0B,QAAQ,WACRP,GAAIA,EACJR,SAAUN,GACNa,OAKb,C,kECGD,IAtBgB,SAAC,GAAgC,IAA9BhB,EAA6B,EAA7BA,SAAUE,EAAmB,EAAnBA,aAC3B,GAA0BuB,EAAAA,EAAAA,WAAS,UAAKvB,IAAxC,eAAOE,EAAP,KAAcsB,EAAd,KAEMvB,GAAewB,EAAAA,EAAAA,cACnB,YAAiB,IAAdC,EAAa,EAAbA,OACOjC,EAAgBiC,EAAhBjC,KAAMgB,EAAUiB,EAAVjB,MACde,GAAS,SAAAG,GACP,OAAO,kBAAKA,GAAZ,cAAwBlC,EAAOgB,GAChC,GACF,GACD,CAACe,IASH,MAAO,CAAEtB,MAAAA,EAAOsB,SAAAA,EAAUvB,aAAAA,EAAcE,aANnB,SAAAyB,GACnBA,EAAEC,iBACF/B,GAAS,UAAKI,IACdsB,GAAS,UAAKxB,GACf,EAGF,C","sources":["modules/LoginForm/login-form.module.css","modules/LoginForm/initialState.js","modules/LoginForm/fieldsType.js","modules/LoginForm/LoginForm.jsx","pages/loginPage/loginPage.jsx","shared/components/InputField/InputField.jsx","shared/hooks/useForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  email: {\n    name: 'email',\n    type: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'User email',\n  },\n  password: {\n    name: 'password',\n    type: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","import useForm from 'shared/hooks/useForm';\n\nimport InputField from 'shared/components/InputField/InputField';\n\nimport css from './login-form.module.css';\nimport initialState from './initialState';\nimport fields from './fieldsType';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { handleChange, state, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { email, password } = state;\n  return (\n    <form onSubmit={handleSubmit} className={css.login_form}>\n      <InputField onChange={handleChange} {...fields.email} value={email} />\n      <InputField\n        onChange={handleChange}\n        {...fields.password}\n        value={password}\n      />\n      <button type=\"submit\">Log in</button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'modules/LoginForm/LoginForm';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/auth-operations';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  return (\n    <div>\n      <LoginForm onSubmit={handleLogin} />\n    </div>\n  );\n};\nexport default LoginPage;\n","import { nanoid } from 'nanoid';\nimport { useMemo } from 'react';\n\nimport { TextField } from '@mui/material';\n\nconst InputField = ({ label, handleChange, ...otherProps }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <>\n      <label htmlFor={id}>\n        <TextField\n          sx={{ width: '100%', padding: '10px 0' }}\n          label={label}\n          variant=\"standard\"\n          id={id}\n          onChange={handleChange}\n          {...otherProps}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default InputField;\n","import { useState, useCallback } from 'react';\n\nconst useForm = ({ onSubmit, initialState }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["email","password","name","type","required","label","placeholder","onSubmit","useForm","initialState","handleChange","state","handleSubmit","className","css","InputField","onChange","fields","value","dispatch","useDispatch","data","login","otherProps","id","useMemo","nanoid","htmlFor","sx","width","padding","variant","useState","setState","useCallback","target","prevState","e","preventDefault"],"sourceRoot":""}