{"version":3,"file":"static/js/161.417cee93.chunk.js","mappings":"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","sources":["modules/UserTable/ContactForm/initState.js","webpack://react-homework-template/./src/modules/UserTable/ContactForm/ContactForm.module.css?49b2","modules/UserTable/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/shared/components/Modal/modal.module.css?5f6f","shared/components/Modal/Modal.jsx","modules/UserTable/ContactList/fieldsType.js","modules/UserTable/ContactList/ContactList.jsx","modules/Filter/filter.module.css","redux/filter/filter-selectors.js","modules/Filter/Filter.jsx","pages/userTablePage/UserTablePage.jsx","shared/components/InputField/InputField.jsx"],"sourcesContent":["export const initState = {\n  name: '',\n  number: '',\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btnSubmit\":\"ContactForm_btnSubmit__ViR7y\",\"loadBtn\":\"ContactForm_loadBtn__acNQ2\",\"loading\":\"ContactForm_loading__p9nXE\",\"move\":\"ContactForm_move__WDtAr\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\nimport {\n  getContactList,\n  selectLoader,\n  selectError,\n} from 'redux/contacts/contacts-selectors';\nimport { useState, useEffect } from 'react';\nimport { initState } from './initState';\n\nimport css from './ContactForm.module.css';\nimport { Box, TextField } from '@mui/material';\n\nconst ContactForm = () => {\n  const [state, setState] = useState({ ...initState });\n  const { name, number } = state;\n\n  const contacts = useSelector(getContactList);\n  const loading = useSelector(selectLoader);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      contacts.filter(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      ).length\n    ) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    dispatch(fetchAddContact({ ...state }));\n  };\n\n  useEffect(() => {\n    !loading && !error && setState({ ...initState });\n  }, [loading, error]);\n\n  const isActiveBtn = name && number ? loading : true;\n\n  return (\n    <Box\n      ml=\"auto\"\n      mr=\"auto\"\n      sx={{ maxWidth: '300px', border: '2px solid', padding: '40px' }}\n      component=\"form\"\n      onSubmit={handleSubmit}\n    >\n      <TextField\n        sx={{ width: '100%', padding: '10px 0' }}\n        id=\"standard-required\"\n        label=\"Name\"\n        variant=\"standard\"\n        onChange={handleChange}\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <TextField\n        sx={{ width: '100%', padding: '10px 0' }}\n        id=\"standard-required\"\n        label=\"Number\"\n        variant=\"standard\"\n        onChange={handleChange}\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <button className={css.btnSubmit} type=\"submit\" disabled={isActiveBtn}>\n        {!loading ? (\n          'Add contact '\n        ) : (\n          <div className={css.loadBtn}>\n            <div className={css.loading}></div>Loading...\n          </div>\n        )}\n      </button>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"modal_backdrop\":\"modal_modal_backdrop__e5IYj\",\"modal_body\":\"modal_modal_body__Rj2G2\",\"btnClose\":\"modal_btnClose__W5tXp\",\"isOpen\":\"modal_isOpen__nDIhB\"};","import css from './modal.module.css';\nimport { createPortal } from 'react-dom';\nimport { useEffect, useCallback } from 'react';\nimport { Box, IconButton } from '@mui/material';\nimport { Close } from '@mui/icons-material';\n\nexport const modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ close, children }) => {\n  const onClose = useCallback(\n    ({ target, currentTarget, code }) => {\n      if (target === currentTarget || code === 'Escape') {\n        close();\n      }\n    },\n    [close]\n  );\n  useEffect(() => {\n    document.addEventListener('keydown', onClose);\n    return () => {\n      document.removeEventListener('keydown', onClose);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <Box className={css.modal_backdrop} onClick={onClose}>\n      <div className={css.modal_body}>\n        <IconButton type=\"button\" onClick={onClose}>\n          <Close />\n        </IconButton>\n        {children}\n      </div>\n    </Box>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","const fields = {\n  name: {\n    name: 'name',\n    type: 'text',\n    required: true,\n    label: 'Contact name',\n    placeholder: 'Contact name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  },\n  number: {\n    name: 'number',\n    type: 'tel',\n    required: true,\n    label: 'Contact number',\n    placeholder: 'Contact number',\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    title:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n  },\n};\n\nexport default fields;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Modal from 'shared/components/Modal/Modal';\n\nimport fields from './fieldsType';\n\nimport {\n  fetchAllContacts,\n  fetchDeleteContact,\n  fetchUpdateContact,\n} from 'redux/contacts/contacts-operations';\nimport { useEffect, useState, useCallback } from 'react';\nimport { filterByName, selectLoader } from 'redux/contacts/contacts-selectors';\nimport InputField from 'shared/components/InputField/InputField';\nimport {\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n} from '@mui/material';\nimport { PersonRemove } from '@mui/icons-material';\n\nconst ContactList = () => {\n  const [modal, setModal] = useState(false);\n  const [modalDelete, setModalDelete] = useState(false);\n  const [contactId, setContactId] = useState('');\n\n  const dispatch = useDispatch();\n  const loading = useSelector(selectLoader);\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const onModalDelete = id => {\n    setContactId(id);\n    toggleModalDelete();\n  };\n\n  const handleDelete = () => {\n    dispatch(fetchDeleteContact(contactId));\n    toggleModalDelete();\n    setContactId('');\n  };\n\n  const onModalEdit = (id, name, number) => {\n    setContactId(id);\n    setState({ name, number });\n    toggleModal();\n  };\n\n  const userList = useSelector(filterByName);\n\n  const [state, setState] = useState({ name: '', number: '' });\n\n  const handleUpdate = e => {\n    e.preventDefault();\n\n    const uniqContactName = userList.every(\n      ({ name, id }) => name !== state.name || id !== contactId\n    );\n\n    const uniqContactNumber = userList.every(\n      ({ number, id }) => number !== state.number || id !== contactId\n    );\n\n    if (!uniqContactName) {\n      return alert('Name is already exist!!!');\n    }\n    if (!uniqContactNumber) {\n      return alert('Number is already exist!!!');\n    }\n    const data = {\n      name: state.name,\n      number: state.number,\n    };\n    dispatch(fetchUpdateContact({ id: contactId, data }));\n    toggleModal();\n    setContactId('');\n  };\n\n  const toggleModal = () => {\n    setModal(prevState => !prevState);\n  };\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const toggleModalDelete = () => setModalDelete(prevState => !prevState);\n\n  const changeColor = (onLoading, active) => (loading ? onLoading : active);\n\n  const elements = userList.map(({ id, name, number }) => (\n    <ListItem\n      sx={{ margin: '0', padding: '0', borderBottom: '1px solid' }}\n      key={id}\n    >\n      <ListItemButton sx={{ margin: '0', cursor: 'default' }}>\n        <ListItemText>\n          {name}: {number}\n        </ListItemText>\n        <div>\n          <IconButton\n            sx={{ marginRight: '5px' }}\n            id={id}\n            disabled={loading}\n            type=\"button\"\n            onClick={() => onModalDelete(id)}\n          >\n            <PersonRemove color={changeColor('inherit', 'secondary')} />\n          </IconButton>\n          <Button\n            variant=\"outlined\"\n            id={id}\n            disabled={loading}\n            type=\"button\"\n            onClick={() => onModalEdit(id, name, number)}\n          >\n            Edit\n          </Button>\n        </div>\n      </ListItemButton>\n    </ListItem>\n  ));\n  return (\n    <>\n      {\n        <List sx={{ width: '100%', maxWidth: 360, margin: '0 auto' }}>\n          {elements}\n          {modalDelete && (\n            <Modal close={toggleModalDelete}>\n              <Button type=\"button\" onClick={handleDelete}>\n                DELETE\n              </Button>\n            </Modal>\n          )}\n          {modal && (\n            <Modal close={toggleModal}>\n              <form onSubmit={handleUpdate}>\n                <InputField\n                  {...fields.name}\n                  onChange={handleChange}\n                  value={state.name}\n                />\n                <InputField\n                  {...fields.number}\n                  onChange={handleChange}\n                  value={state.number}\n                />\n                <button type=\"submit\">Update</button>\n              </form>\n            </Modal>\n          )}\n        </List>\n      }\n    </>\n  );\n};\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  filteredList: [],\n};\n\nContactList.propTypes = {\n  filteredList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","export const getFilter = ({ filter }) => filter;\n","import css from './filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport InputField from 'shared/components/InputField/InputField';\nimport { Box } from '@mui/system';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = ({ target }) => dispatch(setFilter(target.value));\n\n  return (\n    <Box sx={{ maxWidth: '320px', width: '100%', margin: '0 auto' }}>\n      <label htmlFor=\"filter\">\n        <InputField\n          placeholder=\"Find\n        contacts\n        by\n        name\"\n          label=\"Find contacts by name\"\n          value={filter}\n          className={css.filter}\n          type=\"text\"\n          name=\"filter\"\n          onChange={handleChange}\n        />\n      </label>\n    </Box>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'modules/UserTable/ContactForm/ContactForm';\nimport ContactList from 'modules/UserTable/ContactList/ContactList';\nimport Filter from 'modules/Filter/Filter';\n\nimport { Container, Typography } from '@mui/material';\n\nconst UserTablePage = () => {\n  return (\n    <Container>\n      <Typography\n        variant=\"h1\"\n        align=\"center\"\n        sx={{ fontWeight: 700, padding: 3, fontSize: '32px' }}\n      >\n        Phonebook\n      </Typography>\n      <ContactForm />\n      <Typography\n        variant=\"h2\"\n        align=\"center\"\n        sx={{ fontWeight: 500, padding: 2, fontSize: '28px' }}\n      >\n        Contacts\n      </Typography>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default UserTablePage;\n","import { nanoid } from 'nanoid';\nimport { useMemo } from 'react';\n\nimport { TextField } from '@mui/material';\n\nconst InputField = ({ label, handleChange, ...otherProps }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <>\n      <label htmlFor={id}>\n        <TextField\n          sx={{ width: '100%', padding: '10px 0' }}\n          label={label}\n          variant=\"standard\"\n          id={id}\n          onChange={handleChange}\n          {...otherProps}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default InputField;\n"],"names":["initState","name","number","useState","state","setState","contacts","useSelector","getContactList","loading","selectLoader","error","selectError","dispatch","useDispatch","handleChange","target","value","prevState","useEffect","isActiveBtn","Box","ml","mr","sx","maxWidth","border","padding","component","onSubmit","event","preventDefault","filter","contact","toLowerCase","length","alert","fetchAddContact","TextField","width","id","label","variant","onChange","type","pattern","title","required","className","css","disabled","modalRoot","document","querySelector","close","children","onClose","useCallback","currentTarget","code","addEventListener","removeEventListener","createPortal","onClick","IconButton","Close","placeholder","ContactList","modal","setModal","modalDelete","setModalDelete","contactId","setContactId","fetchAllContacts","userList","filterByName","toggleModal","toggleModalDelete","elements","map","onLoading","active","ListItem","margin","borderBottom","ListItemButton","cursor","ListItemText","marginRight","onModalDelete","PersonRemove","color","Button","onModalEdit","List","fetchDeleteContact","e","uniqContactName","every","uniqContactNumber","data","fetchUpdateContact","InputField","fields","defaultProps","filteredList","getFilter","htmlFor","setFilter","Container","Typography","align","fontWeight","fontSize","otherProps","useMemo","nanoid"],"sourceRoot":""}