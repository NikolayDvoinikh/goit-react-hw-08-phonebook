{"version":3,"file":"static/js/116.bd110469.chunk.js","mappings":"yOAAaA,EAAiB,SAAC,GAAD,SAAGC,SAAwBA,QAA3B,EAEjBC,EAAiB,SAAC,GAA0B,IAAxBD,EAAuB,EAAvBA,SAAUE,EAAa,EAAbA,OACzC,OAAOF,EAASA,SAASE,QAAO,SAAAC,GAC9B,OAAOA,EAAQC,KAAKC,cAAcC,SAASJ,EAAOG,cACnD,GACF,EAEYE,EAAe,SAAC,GAAD,SAAGP,SAAwBQ,SAA3B,EACfC,EAAc,SAAC,GAAD,SAAGT,SAAwBU,KAA3B,E,UCTdC,EAAY,CACvBP,KAAM,GACNQ,OAAQ,ICDV,EAA4B,+BAA5B,EAAqE,6BAArE,EAA4G,6B,6BCqG5G,EAzFoB,WAClB,OAA0BC,EAAAA,EAAAA,WAAS,UAAKF,IAAxC,eAAOG,EAAP,KAAcC,EAAd,KACQX,EAAiBU,EAAjBV,KAAMQ,EAAWE,EAAXF,OAERZ,GAAWgB,EAAAA,EAAAA,IAAYjB,GACvBkB,GAAUD,EAAAA,EAAAA,IAAYT,GACtBG,GAAQM,EAAAA,EAAAA,IAAYP,GACpBS,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdjB,EAAgBiB,EAAhBjB,KAAMkB,EAAUD,EAAVC,MACdP,GAAS,SAAAQ,GACP,OAAO,kBAAKA,GAAZ,cAAwBnB,EAAOkB,GAChC,GACF,GAoBDE,EAAAA,EAAAA,YAAU,YACPP,IAAYP,GAASK,GAAS,UAAKJ,GACrC,GAAE,CAACM,EAASP,IAEb,IAAMe,GAAcrB,IAAQQ,GAASK,EAErC,OACE,UAACS,EAAA,EAAD,CACEC,GAAG,OACHC,GAAG,OACHC,GAAI,CAAEC,SAAU,QAASC,OAAQ,YAAaC,QAAS,QACvDC,UAAU,OACVC,SA9BiB,SAAAC,GAGnB,OAFAA,EAAMC,iBAGJpC,EAASE,QACP,SAAAC,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBD,EAAKC,aAAxC,IACPgC,OAEKC,MAAM,GAAD,OAAIlC,EAAJ,4BAGVJ,EAASE,QAAO,SAAAC,GAAO,OAAIA,EAAQS,SAAWA,CAAvB,IAA+ByB,OACjDC,MAAM,GAAD,OAAI1B,EAAJ,iCAGdM,GAASqB,EAAAA,EAAAA,KAAgB,UAAKzB,IAC/B,EASC,WAOE,SAAC0B,EAAA,EAAD,CACEX,GAAI,CAAEY,MAAO,OAAQT,QAAS,UAC9BU,GAAG,oBACHC,MAAM,OACNC,QAAQ,WACRC,SAAUzB,EACVE,MAAOlB,EACP0C,KAAK,OACL1C,KAAK,OACL2C,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAGV,SAACT,EAAA,EAAD,CACEX,GAAI,CAAEY,MAAO,OAAQT,QAAS,UAC9BU,GAAG,oBACHC,MAAM,SACNC,QAAQ,WACRC,SAAUzB,EACVE,MAAOV,EACPkC,KAAK,MACL1C,KAAK,SACL2C,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAGV,mBAAQC,UAAWC,EAAeL,KAAK,SAASM,SAAU3B,EAA1D,SACIR,GAGA,iBAAKiC,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,IADlB,gBAFA,mBAST,ECnGD,EAAiC,8BAAjC,EAA4E,0B,oBCK/DE,EAAYC,SAASC,cAAc,eAqChD,EAnCc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAChBC,GAAUC,EAAAA,EAAAA,cACd,YAAsC,IAAnCtC,EAAkC,EAAlCA,OAAQuC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,KACpBxC,IAAWuC,GAA0B,WAATC,GAC9BL,GAEH,GACD,CAACA,IASH,OAPAhC,EAAAA,EAAAA,YAAU,WAER,OADA8B,SAASQ,iBAAiB,UAAWJ,GAC9B,WACLJ,SAASS,oBAAoB,UAAWL,EACzC,CACF,GAAE,CAACA,KAEGM,EAAAA,EAAAA,eACL,SAACtC,EAAA,EAAD,CAAKwB,UAAWC,EAAoBc,QAASP,EAA7C,UACE,iBAAKR,UAAWC,EAAhB,WACE,SAACe,EAAA,EAAD,CACED,QAASP,EACTS,MAAM,YACNtC,GAAI,CACFuC,OAAQ,UACRpC,QAAS,UAIZyB,OAGLJ,EAEH,EClBD,EAvBe,CACbjD,KAAM,CACJA,KAAM,OACN0C,KAAM,OACNG,UAAU,EACVN,MAAO,eACP0B,YAAa,eACbtB,QAAS,yHACTC,MACE,0IAEJpC,OAAQ,CACNR,KAAM,SACN0C,KAAM,MACNG,UAAU,EACVN,MAAO,iBACP0B,YAAa,iBACbtB,QAAS,iEACTC,MACE,iG,kGCWAsB,EAAc,WAClB,OAA0BzD,EAAAA,EAAAA,WAAS,GAAnC,eAAO0D,EAAP,KAAcC,EAAd,KACA,GAAsC3D,EAAAA,EAAAA,WAAS,GAA/C,eAAO4D,EAAP,KAAoBC,EAApB,KACA,GAAkC7D,EAAAA,EAAAA,UAAS,IAA3C,eAAO8D,EAAP,KAAkBC,EAAlB,KAEM1D,GAAWC,EAAAA,EAAAA,MACXF,GAAUD,EAAAA,EAAAA,IAAYT,IAE5BiB,EAAAA,EAAAA,YAAU,WACRN,GAAS2D,EAAAA,EAAAA,MACV,GAAE,CAAC3D,IAEJ,IAiBM4D,GAAW9D,EAAAA,EAAAA,IAAYf,GACvBD,GAAWgB,EAAAA,EAAAA,IAAYjB,GAE7B,GAA0Bc,EAAAA,EAAAA,UAAS,CAAET,KAAM,GAAIQ,OAAQ,KAAvD,eAAOE,EAAP,KAAcC,EAAd,KA6BMgE,EAAc,WAClBP,GAAS,SAAAjD,GAAS,OAAKA,CAAL,GACnB,EAEKH,GAAeuC,EAAAA,EAAAA,cACnB,YAAiB,IAAdtC,EAAa,EAAbA,OACOjB,EAAgBiB,EAAhBjB,KAAMkB,EAAUD,EAAVC,MACdP,GAAS,SAAAQ,GACP,OAAO,kBAAKA,GAAZ,cAAwBnB,EAAOkB,GAChC,GACF,GACD,CAACP,IAGGiE,EAAoB,kBAAMN,GAAe,SAAAnD,GAAS,OAAKA,CAAL,GAA9B,EAIpB0D,EAAWH,EAASI,KAAI,gBAFTC,EAAWC,EAEC1C,EAAH,EAAGA,GAAItC,EAAP,EAAOA,KAAMQ,EAAb,EAAaA,OAAb,OAC5B,SAACyE,EAAA,GAAD,CACEC,gBAAc,EACdzD,GAAI,CAAE0D,OAAQ,IAAKC,aAAc,aAFnC,UAKE,UAACC,EAAA,EAAD,CAAgB5D,GAAI,CAAE0D,OAAQ,IAAKnB,OAAQ,WAA3C,WACE,SAACsB,EAAA,EAAD,CAAcC,QAAO,UAAKvF,EAAL,aAAcQ,MACnC,UAAC,IAAD,YACE,SAACgF,EAAA,EAAD,CACE/D,GAAI,CAAEgE,YAAa,OACnBnD,GAAIA,EACJU,SAAUnC,EACV6B,KAAK,SACLmB,QAAS,kBAjFG,SAAAvB,GACpBkC,EAAalC,GACbsC,GACD,CA8EwBc,CAAcpD,EAApB,EALX,UAOE,SAACqD,EAAA,EAAD,CAAc5B,OAlBHgB,EAkBsB,UAlBXC,EAkBsB,YAlBVnE,EAAUkE,EAAYC,QAoB1D,SAACY,EAAA,EAAD,CACEpD,QAAQ,WACRF,GAAIA,EACJU,SAAUnC,EACV6B,KAAK,SACLmB,QAAS,kBA/EC,SAACvB,EAAItC,EAAMQ,GAC7BgE,EAAalC,GACb3B,EAAS,CAAEX,KAAAA,EAAMQ,OAAAA,IACjBmE,GACD,CA2EwBkB,CAAYvD,EAAItC,EAAMQ,EAA5B,EALX,yBAdC8B,EAJqB,IA+B9B,OACE,+BAEI,UAACwD,EAAA,EAAD,CACErE,GAAI,CACFY,MAAO,OACPX,SAAU,IACVyD,OAAQ,SACRY,UAAW,QACXC,SAAU,QANd,UASGnB,EACAR,IACC,SAAC,EAAD,CAAOjB,MAAOwB,EAAd,UACE,UAAC,IAAD,CACEqB,QAAQ,OACRC,cAAc,SACdC,eAAe,eAHjB,WAKE,SAACC,EAAA,EAAD,CAAYrC,MAAM,UAAlB,6BACA,SAAC6B,EAAA,EAAD,CACElD,KAAK,SACLmB,QApHK,WACnB/C,GAASuF,EAAAA,EAAAA,IAAmB9B,IAC5BK,IACAJ,EAAa,GACd,EAiHe/C,GAAI,CAAEsC,MAAO,OAHf,yBAULI,IACC,SAAC,EAAD,CAAOf,MAAOuB,EAAd,UACE,kBAAM7C,SA7GG,SAAAwE,GACnBA,EAAEtE,iBAEF,IAAMuE,EAAkB3G,EAAS4G,OAC/B,gBAAGxG,EAAH,EAAGA,KAAMsC,EAAT,EAASA,GAAT,OACE5B,EAAMV,KAAKC,gBAAkBD,EAAKC,eAAiBsE,IAAcjC,CADnE,IAIImE,EAAoB7G,EAAS4G,OACjC,gBAAGhG,EAAH,EAAGA,OAAQ8B,EAAX,EAAWA,GAAX,OAAoB9B,IAAWE,EAAMF,QAAU8B,IAAOiC,CAAtD,IAGF,IAAKgC,EACH,OAAOrE,MAAM,4BAEf,IAAKuE,EACH,OAAOvE,MAAM,8BAEf,IAAMwE,EAAO,CACX1G,KAAMU,EAAMV,KACZQ,OAAQE,EAAMF,QAEhBM,GAAS6F,EAAAA,EAAAA,IAAmB,CAAErE,GAAIiC,EAAWmC,KAAAA,KAC7C/B,IACAH,EAAa,GACd,EAoFW,WACE,SAACoC,EAAA,GAAD,kBACMC,EAAAA,MADN,IAEEpE,SAAUzB,EACVE,MAAOR,EAAMV,SAEf,SAAC4G,EAAA,GAAD,kBACMC,EAAAA,QADN,IAEEpE,SAAUzB,EACVE,MAAOR,EAAMF,WAEf,SAACoF,EAAA,EAAD,CACEpD,QAAQ,WACRE,KAAK,SACLjB,GAAI,CAAE0D,OAAQ,YAAac,QAAS,QAHtC,6BAcf,EAED,IAEA/B,EAAY4C,aAAe,CACzBC,aAAc,I,cC3MHC,EAAY,SAAC,GAAD,SAAGlH,MAAH,EC4BzB,EAtBe,WACb,IAAMgB,GAAWC,EAAAA,EAAAA,MACXjB,GAASc,EAAAA,EAAAA,IAAYoG,GAI3B,OACE,SAAC,IAAD,CAAKvF,GAAI,CAAEC,SAAU,QAASW,MAAO,OAAQ8C,OAAQ,UAArD,UACE,kBAAO8B,QAAQ,SAAf,UACE,SAACL,EAAA,EAAD,CACE3C,YAAY,wBACZ1B,MAAM,wBACNrB,MAAOpB,EACP4C,KAAK,OACL1C,KAAK,SACLyC,SAXa,SAAC,GAAD,IAAGxB,EAAH,EAAGA,OAAH,OAAgBH,GAASoG,EAAAA,EAAAA,GAAUjG,EAAOC,OAA1C,OAgBtB,E,UCID,EAxBsB,WACpB,OACE,UAACiG,EAAA,EAAD,YACE,SAACf,EAAA,EAAD,CACE5D,QAAQ,KACR4E,MAAM,SACN3F,GAAI,CAAE4F,WAAY,IAAKzF,QAAS,EAAG0F,SAAU,QAH/C,wBAOA,SAAC,EAAD,KACA,SAAClB,EAAA,EAAD,CACE5D,QAAQ,KACR4E,MAAM,SACN3F,GAAI,CAAE4F,WAAY,IAAKzF,QAAS,EAAG0F,SAAU,QAH/C,uBAOA,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C,iHCLD,IAlBmB,SAAC,GAA4C,IAA1C/E,EAAyC,EAAzCA,MAAOvB,EAAkC,EAAlCA,aAAiBuG,GAAiB,YACvDjF,GAAKkF,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IACnC,OACE,+BACE,kBAAOR,QAAS3E,EAAhB,UACE,SAAC,KAAD,QACEb,GAAI,CAAEY,MAAO,OAAQT,QAAS,UAC9BW,MAAOA,EACPC,QAAQ,WACRF,GAAIA,EACJG,SAAUzB,GACNuG,OAKb,C","sources":["redux/contacts/contacts-selectors.js","modules/UserTable/ContactForm/initState.js","webpack://react-homework-template/./src/modules/UserTable/ContactForm/ContactForm.module.css?49b2","modules/UserTable/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/shared/components/Modal/modal.module.css?5f6f","shared/components/Modal/Modal.jsx","modules/UserTable/ContactList/fieldsType.js","modules/UserTable/ContactList/ContactList.jsx","redux/filter/filter-selectors.js","modules/Filter/Filter.jsx","pages/userTablePage/UserTablePage.jsx","shared/components/InputField/InputField.jsx"],"sourcesContent":["export const getContactList = ({ contacts }) => contacts.contacts;\n\nexport const filteredByName = ({ contacts, filter }) => {\n  return contacts.contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\n  });\n};\n\nexport const selectLoader = ({ contacts }) => contacts.isLoading;\nexport const selectError = ({ contacts }) => contacts.error;\n","export const initState = {\n  name: '',\n  number: '',\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btnSubmit\":\"ContactForm_btnSubmit__ViR7y\",\"loadBtn\":\"ContactForm_loadBtn__acNQ2\",\"loading\":\"ContactForm_loading__p9nXE\",\"move\":\"ContactForm_move__WDtAr\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\nimport {\n  getContactList,\n  selectLoader,\n  selectError,\n} from 'redux/contacts/contacts-selectors';\nimport { useState, useEffect } from 'react';\nimport { initState } from './initState';\n\nimport css from './ContactForm.module.css';\nimport { Box, TextField } from '@mui/material';\n\nconst ContactForm = () => {\n  const [state, setState] = useState({ ...initState });\n  const { name, number } = state;\n\n  const contacts = useSelector(getContactList);\n  const loading = useSelector(selectLoader);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      contacts.filter(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      ).length\n    ) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    if (contacts.filter(contact => contact.number === number).length) {\n      return alert(`${number} is already in contacts`);\n    }\n\n    dispatch(fetchAddContact({ ...state }));\n  };\n\n  useEffect(() => {\n    !loading && !error && setState({ ...initState });\n  }, [loading, error]);\n\n  const isActiveBtn = name && number ? loading : true;\n\n  return (\n    <Box\n      ml=\"auto\"\n      mr=\"auto\"\n      sx={{ maxWidth: '300px', border: '2px solid', padding: '40px' }}\n      component=\"form\"\n      onSubmit={handleSubmit}\n    >\n      <TextField\n        sx={{ width: '100%', padding: '10px 0' }}\n        id=\"standard-required\"\n        label=\"Name\"\n        variant=\"standard\"\n        onChange={handleChange}\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <TextField\n        sx={{ width: '100%', padding: '10px 0' }}\n        id=\"standard-required\"\n        label=\"Number\"\n        variant=\"standard\"\n        onChange={handleChange}\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <button className={css.btnSubmit} type=\"submit\" disabled={isActiveBtn}>\n        {!loading ? (\n          'Add contact '\n        ) : (\n          <div className={css.loadBtn}>\n            <div className={css.loading}></div>Loading...\n          </div>\n        )}\n      </button>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"modal_backdrop\":\"modal_modal_backdrop__e5IYj\",\"modal_body\":\"modal_modal_body__Rj2G2\",\"btnClose\":\"modal_btnClose__W5tXp\",\"isOpen\":\"modal_isOpen__nDIhB\"};","import css from './modal.module.css';\nimport { createPortal } from 'react-dom';\nimport { useEffect, useCallback } from 'react';\nimport { Box } from '@mui/material';\nimport { Close } from '@mui/icons-material';\n\nexport const modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ close, children }) => {\n  const onClose = useCallback(\n    ({ target, currentTarget, code }) => {\n      if (target === currentTarget || code === 'Escape') {\n        close();\n      }\n    },\n    [close]\n  );\n  useEffect(() => {\n    document.addEventListener('keydown', onClose);\n    return () => {\n      document.removeEventListener('keydown', onClose);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <Box className={css.modal_backdrop} onClick={onClose}>\n      <div className={css.modal_body}>\n        <Close\n          onClick={onClose}\n          color=\"secondary\"\n          sx={{\n            cursor: 'pointer',\n            padding: '10px',\n          }}\n        />\n\n        {children}\n      </div>\n    </Box>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","const fields = {\n  name: {\n    name: 'name',\n    type: 'text',\n    required: true,\n    label: 'Contact name',\n    placeholder: 'Contact name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  },\n  number: {\n    name: 'number',\n    type: 'tel',\n    required: true,\n    label: 'Contact number',\n    placeholder: 'Contact number',\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    title:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n  },\n};\n\nexport default fields;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Modal from 'shared/components/Modal/Modal';\n\nimport fields from './fieldsType';\n\nimport {\n  fetchAllContacts,\n  fetchDeleteContact,\n  fetchUpdateContact,\n} from 'redux/contacts/contacts-operations';\nimport { useEffect, useState, useCallback } from 'react';\nimport {\n  filteredByName,\n  selectLoader,\n  getContactList,\n} from 'redux/contacts/contacts-selectors';\nimport InputField from 'shared/components/InputField/InputField';\nimport {\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  Typography,\n} from '@mui/material';\nimport { PersonRemove } from '@mui/icons-material';\nimport { Box } from '@mui/system';\n\nconst ContactList = () => {\n  const [modal, setModal] = useState(false);\n  const [modalDelete, setModalDelete] = useState(false);\n  const [contactId, setContactId] = useState('');\n\n  const dispatch = useDispatch();\n  const loading = useSelector(selectLoader);\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const onModalDelete = id => {\n    setContactId(id);\n    toggleModalDelete();\n  };\n\n  const handleDelete = () => {\n    dispatch(fetchDeleteContact(contactId));\n    toggleModalDelete();\n    setContactId('');\n  };\n\n  const onModalEdit = (id, name, number) => {\n    setContactId(id);\n    setState({ name, number });\n    toggleModal();\n  };\n\n  const userList = useSelector(filteredByName);\n  const contacts = useSelector(getContactList);\n\n  const [state, setState] = useState({ name: '', number: '' });\n\n  const handleUpdate = e => {\n    e.preventDefault();\n\n    const uniqContactName = contacts.every(\n      ({ name, id }) =>\n        state.name.toLowerCase() !== name.toLowerCase() || contactId === id\n    );\n\n    const uniqContactNumber = contacts.every(\n      ({ number, id }) => number !== state.number || id === contactId\n    );\n\n    if (!uniqContactName) {\n      return alert('Name is already exist!!!');\n    }\n    if (!uniqContactNumber) {\n      return alert('Number is already exist!!!');\n    }\n    const data = {\n      name: state.name,\n      number: state.number,\n    };\n    dispatch(fetchUpdateContact({ id: contactId, data }));\n    toggleModal();\n    setContactId('');\n  };\n\n  const toggleModal = () => {\n    setModal(prevState => !prevState);\n  };\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const toggleModalDelete = () => setModalDelete(prevState => !prevState);\n\n  const changeColor = (onLoading, active) => (loading ? onLoading : active);\n\n  const elements = userList.map(({ id, name, number }) => (\n    <ListItem\n      disablePadding\n      sx={{ margin: '0', borderBottom: '1px solid' }}\n      key={id}\n    >\n      <ListItemButton sx={{ margin: '0', cursor: 'default' }}>\n        <ListItemText primary={`${name}: ${number}`} />\n        <Box>\n          <IconButton\n            sx={{ marginRight: '5px' }}\n            id={id}\n            disabled={loading}\n            type=\"button\"\n            onClick={() => onModalDelete(id)}\n          >\n            <PersonRemove color={changeColor('inherit', 'secondary')} />\n          </IconButton>\n          <Button\n            variant=\"outlined\"\n            id={id}\n            disabled={loading}\n            type=\"button\"\n            onClick={() => onModalEdit(id, name, number)}\n          >\n            Edit\n          </Button>\n        </Box>\n      </ListItemButton>\n    </ListItem>\n  ));\n  return (\n    <>\n      {\n        <List\n          sx={{\n            width: '100%',\n            maxWidth: 360,\n            margin: '0 auto',\n            maxHeight: '200px',\n            overflow: 'auto',\n          }}\n        >\n          {elements}\n          {modalDelete && (\n            <Modal close={toggleModalDelete}>\n              <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                justifyContent=\"space-around\"\n              >\n                <Typography color=\"primary\">Are you shure?</Typography>\n                <Button\n                  type=\"button\"\n                  onClick={handleDelete}\n                  sx={{ color: 'red' }}\n                >\n                  DELETE\n                </Button>\n              </Box>\n            </Modal>\n          )}\n          {modal && (\n            <Modal close={toggleModal}>\n              <form onSubmit={handleUpdate}>\n                <InputField\n                  {...fields.name}\n                  onChange={handleChange}\n                  value={state.name}\n                />\n                <InputField\n                  {...fields.number}\n                  onChange={handleChange}\n                  value={state.number}\n                />\n                <Button\n                  variant=\"outlined\"\n                  type=\"submit\"\n                  sx={{ margin: '10px auto', display: 'flex' }}\n                >\n                  Update\n                </Button>\n              </form>\n            </Modal>\n          )}\n        </List>\n      }\n    </>\n  );\n};\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  filteredList: [],\n};\n\nContactList.propTypes = {\n  filteredList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","export const getFilter = ({ filter }) => filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport InputField from 'shared/components/InputField/InputField';\nimport { Box } from '@mui/system';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = ({ target }) => dispatch(setFilter(target.value));\n\n  return (\n    <Box sx={{ maxWidth: '320px', width: '100%', margin: '0 auto' }}>\n      <label htmlFor=\"filter\">\n        <InputField\n          placeholder=\"Find contacts by name\"\n          label=\"Find contacts by name\"\n          value={filter}\n          type=\"text\"\n          name=\"filter\"\n          onChange={handleChange}\n        />\n      </label>\n    </Box>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'modules/UserTable/ContactForm/ContactForm';\nimport ContactList from 'modules/UserTable/ContactList/ContactList';\nimport Filter from 'modules/Filter/Filter';\n\nimport { Container, Typography } from '@mui/material';\n\nconst UserTablePage = () => {\n  return (\n    <Container>\n      <Typography\n        variant=\"h1\"\n        align=\"center\"\n        sx={{ fontWeight: 700, padding: 3, fontSize: '32px' }}\n      >\n        Phonebook\n      </Typography>\n      <ContactForm />\n      <Typography\n        variant=\"h2\"\n        align=\"center\"\n        sx={{ fontWeight: 500, padding: 2, fontSize: '28px' }}\n      >\n        Contacts\n      </Typography>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default UserTablePage;\n","import { nanoid } from 'nanoid';\nimport { useMemo } from 'react';\n\nimport { TextField } from '@mui/material';\n\nconst InputField = ({ label, handleChange, ...otherProps }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <>\n      <label htmlFor={id}>\n        <TextField\n          sx={{ width: '100%', padding: '10px 0' }}\n          label={label}\n          variant=\"standard\"\n          id={id}\n          onChange={handleChange}\n          {...otherProps}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default InputField;\n"],"names":["getContactList","contacts","filteredByName","filter","contact","name","toLowerCase","includes","selectLoader","isLoading","selectError","error","initState","number","useState","state","setState","useSelector","loading","dispatch","useDispatch","handleChange","target","value","prevState","useEffect","isActiveBtn","Box","ml","mr","sx","maxWidth","border","padding","component","onSubmit","event","preventDefault","length","alert","fetchAddContact","TextField","width","id","label","variant","onChange","type","pattern","title","required","className","css","disabled","modalRoot","document","querySelector","close","children","onClose","useCallback","currentTarget","code","addEventListener","removeEventListener","createPortal","onClick","Close","color","cursor","placeholder","ContactList","modal","setModal","modalDelete","setModalDelete","contactId","setContactId","fetchAllContacts","userList","toggleModal","toggleModalDelete","elements","map","onLoading","active","ListItem","disablePadding","margin","borderBottom","ListItemButton","ListItemText","primary","IconButton","marginRight","onModalDelete","PersonRemove","Button","onModalEdit","List","maxHeight","overflow","display","flexDirection","justifyContent","Typography","fetchDeleteContact","e","uniqContactName","every","uniqContactNumber","data","fetchUpdateContact","InputField","fields","defaultProps","filteredList","getFilter","htmlFor","setFilter","Container","align","fontWeight","fontSize","otherProps","useMemo","nanoid"],"sourceRoot":""}