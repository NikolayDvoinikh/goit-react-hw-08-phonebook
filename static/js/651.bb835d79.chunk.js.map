{"version":3,"file":"static/js/651.bb835d79.chunk.js","mappings":"2MAMA,EANqB,CACnBA,KAAM,GACNC,MAAO,GACPC,SAAU,ICqBZ,EAxBe,CACbF,KAAM,CACJA,KAAM,OACNG,KAAM,OACNC,UAAU,EACVC,MAAO,YACPC,YAAa,aAEfL,MAAO,CACLD,KAAM,QACNG,KAAM,QACNC,UAAU,EACVC,MAAO,aACPC,YAAa,cAEfJ,SAAU,CACRF,KAAM,WACNG,KAAM,WACNC,UAAU,EACVC,MAAO,gBACPC,YAAa,kB,UCnBjB,GAAiB,E,UC4BjB,EAtBiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDC,aAAAA,EACAF,SAAAA,IAFMG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAKrBZ,EAA0BU,EAA1BV,KAAMC,EAAoBS,EAApBT,MAAOC,EAAaQ,EAAbR,SAErB,OACE,kBAAMK,SAAUK,EAAcC,UAAWC,EAAAA,UAAzC,WACE,SAACC,EAAA,GAAD,kBAAgBC,EAAAA,MAAhB,IAA6BC,SAAUN,EAAcO,MAAOlB,MAC5D,SAACe,EAAA,GAAD,kBAAgBC,EAAAA,OAAhB,IAA8BC,SAAUN,EAAcO,MAAOjB,MAC7D,SAACc,EAAA,GAAD,kBACMC,EAAAA,UADN,IAEEC,SAAUN,EACVO,MAAOhB,MAET,mBAAQC,KAAK,SAAb,wBAGL,E,oBCVD,EAbiB,WACf,IAAMgB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,0BACE,SAAC,EAAD,CAAUb,SANO,SAAAc,GACnBF,GAASG,EAAAA,EAAAA,IAAOD,GACjB,KAOF,C,kHCOD,IAlBmB,SAAC,GAA4C,IAA1ChB,EAAyC,EAAzCA,MAAOM,EAAkC,EAAlCA,aAAiBY,GAAiB,YACvDC,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IACnC,OACE,+BACE,kBAAOC,QAASH,EAAhB,UACE,SAAC,KAAD,QACEI,GAAI,CAAEC,MAAO,OAAQC,QAAS,UAC9BzB,MAAOA,EACP0B,QAAQ,WACRP,GAAIA,EACJP,SAAUN,GACNY,OAKb,C,kECGD,IAtBgB,SAAC,GAAgC,IAA9BhB,EAA6B,EAA7BA,SAAUE,EAAmB,EAAnBA,aAC3B,GAA0BuB,EAAAA,EAAAA,WAAS,UAAKvB,IAAxC,eAAOC,EAAP,KAAcuB,EAAd,KAEMtB,GAAeuB,EAAAA,EAAAA,cACnB,YAAiB,IAAdC,EAAa,EAAbA,OACOnC,EAAgBmC,EAAhBnC,KAAMkB,EAAUiB,EAAVjB,MACde,GAAS,SAAAG,GACP,OAAO,kBAAKA,GAAZ,cAAwBpC,EAAOkB,GAChC,GACF,GACD,CAACe,IASH,MAAO,CAAEvB,MAAAA,EAAOuB,SAAAA,EAAUtB,aAAAA,EAAcC,aANnB,SAAAyB,GACnBA,EAAEC,iBACF/B,GAAS,UAAKG,IACduB,GAAS,UAAKxB,GACf,EAGF,C","sources":["modules/AuthForm/initialState.js","modules/AuthForm/fieldsType.js","modules/AuthForm/auth-form.module.css","modules/AuthForm/AuthForm.jsx","pages/authPage/AuthPage.jsx","shared/components/InputField/InputField.jsx","shared/hooks/useForm.js"],"sourcesContent":["const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  name: {\n    name: 'name',\n    type: 'text',\n    required: true,\n    label: 'User name',\n    placeholder: 'User name',\n  },\n  email: {\n    name: 'email',\n    type: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'User email',\n  },\n  password: {\n    name: 'password',\n    type: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {};","import useForm from 'shared/hooks/useForm';\nimport initialState from './initialState';\nimport fields from './fieldsType';\nimport InputField from 'shared/components/InputField/InputField';\n\nimport css from './auth-form.module.css';\n\nconst AuthForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit} className={css.auth_form}>\n      <InputField {...fields.name} onChange={handleChange} value={name} />\n      <InputField {...fields.email} onChange={handleChange} value={email} />\n      <InputField\n        {...fields.password}\n        onChange={handleChange}\n        value={password}\n      />\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from 'modules/AuthForm/AuthForm';\nimport { signup } from 'redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\n\nconst AuthPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSignup = data => {\n    dispatch(signup(data));\n  };\n\n  return (\n    <div>\n      <AuthForm onSubmit={handleSignup} />\n    </div>\n  );\n};\nexport default AuthPage;\n","import { nanoid } from 'nanoid';\nimport { useMemo } from 'react';\n\nimport { TextField } from '@mui/material';\n\nconst InputField = ({ label, handleChange, ...otherProps }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <>\n      <label htmlFor={id}>\n        <TextField\n          sx={{ width: '100%', padding: '10px 0' }}\n          label={label}\n          variant=\"standard\"\n          id={id}\n          onChange={handleChange}\n          {...otherProps}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default InputField;\n","import { useState, useCallback } from 'react';\n\nconst useForm = ({ onSubmit, initialState }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["name","email","password","type","required","label","placeholder","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","css","InputField","fields","onChange","value","dispatch","useDispatch","data","signup","otherProps","id","useMemo","nanoid","htmlFor","sx","width","padding","variant","useState","setState","useCallback","target","prevState","e","preventDefault"],"sourceRoot":""}